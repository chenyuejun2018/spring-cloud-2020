server:
  port: 2025

# eureka注册中心
eureka:
  instance:
    hostname: cloud-stream-rabbitmq-service
    instance-id: cloud-config-center2025 #管理界面显示服务ID
    prefer-ip-address: true  #管理界面点服务ID显示IP地址
    # Eureka 向服务端发送心跳的时间间隔，单位秒，默认为30
    lease-renewal-interval-in-seconds: 60
    # Eureka 服务端在接收到最后一次心跳包后等待的时间上限，单位秒，默认90，超时剔除服务
    lease-expiration-duration-in-seconds: 120
  client:
    # 表示是否将自己注册进Eureka 默认 true
    register-with-eureka: true
    # 是否从EurekaServer抓取已有的注册信息，默认true 单节点无所谓，
    # 集群必须设置为true才能配合ribbon使用负载均衡。
    fetch-registry: true
    service-url:
      #defaultZone: http://localhost:7001/eureka  # 单机版配置
      defaultZone: http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka

spring:
  application:
    name: cloud-stream-rabbitmq-service
  cloud:
    stream:
      bindings: #服务的整合处理
        output:  # 该名称是一个通道的名称 private MessageChannel output;
          destination: minestreamExchange #表示要使用的Exchange名称定义
          content-type: application/json  #设置消息类型json 文本为 text/plain
          binder: defaultRabbit
      binders:  # 此处配置要绑定的rabbitmq的服务信息
        defaultRabbit: #表示定义的名称，用于binding整合
          type: rabbit #消息组件类型
          environment: #设置rabbitmq的相关的环境配置
            spring:
              rabbitmq:  # RabbitMQ配置 管理WEB端是15672，这里访问端5672
                  host: localhost
                  port: 5672
                  username: guest
                  password: guest

#####Kafka 配置 ########################################
#  cloud:
#    stream:
#      kafka:
#        binder:
##Kafka的消息中间件服务器
#          brokers: localhost:9092
##Zookeeper的节点，如果集群，后面加,号分隔
#          zk-nodes: localhost:2181
##如果设置为false,就不会自动创建Topic 有可能你Topic还没创建就直接调用了。
#          auto-create-topics: true
#      bindings:
##这里用stream给我们提供的默认output，后面会讲到自定义output
#        output:
##消息发往的目的地
#            destination: stream-demo
##消息发送的格式，接收端不用指定格式，但是发送端要
#            content-type: text/plain